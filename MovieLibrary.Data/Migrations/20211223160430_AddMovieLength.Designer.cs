// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieLibrary.Data.Models;

namespace MovieLibrary.Data.Migrations
{
    [DbContext(typeof(MovielibraryContext))]
    [Migration("20211223160430_AddMovieLength")]
    partial class AddMovieLength
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieLibrary.Data.Models.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int")
                        .HasColumnName("MaritalStatusID");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            MaritalStatusId = 1,
                            Caption = "Single"
                        },
                        new
                        {
                            MaritalStatusId = 2,
                            Caption = "Married"
                        },
                        new
                        {
                            MaritalStatusId = 3,
                            Caption = "Divorced"
                        },
                        new
                        {
                            MaritalStatusId = 4,
                            Caption = "Widowed"
                        });
                });

            modelBuilder.Entity("MovieLibrary.Data.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovieID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<int>("MovieLength")
                        .HasColumnType("int");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Caption = "The Wolf of Wallstreet",
                            InsertDate = new DateTime(2021, 12, 21, 15, 50, 35, 703, DateTimeKind.Unspecified),
                            MovieLength = 180,
                            ReleaseYear = 2013
                        },
                        new
                        {
                            MovieId = 2,
                            Caption = "Pulp Fiction",
                            InsertDate = new DateTime(2021, 12, 22, 11, 43, 11, 777, DateTimeKind.Unspecified),
                            MovieLength = 140,
                            ReleaseYear = 1994
                        },
                        new
                        {
                            MovieId = 3,
                            Caption = "Avatar",
                            DeleteDate = new DateTime(2021, 12, 22, 16, 17, 50, 937, DateTimeKind.Unspecified),
                            InsertDate = new DateTime(2021, 12, 22, 16, 14, 25, 437, DateTimeKind.Unspecified),
                            MovieLength = 170,
                            ReleaseYear = 2009
                        });
                });

            modelBuilder.Entity("MovieLibrary.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Idnumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IDNumber");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int")
                        .HasColumnName("MaritalStatusID");

                    b.HasKey("UserId");

                    b.HasIndex("MaritalStatusId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "123 Main St",
                            FirstName = "John",
                            Idnumber = "123456789",
                            InsertDate = new DateTime(2021, 12, 22, 18, 30, 28, 537, DateTimeKind.Unspecified),
                            LastName = "Doe",
                            MaritalStatusId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Address = "321 5th St",
                            FirstName = "Jane",
                            Idnumber = "987654321",
                            InsertDate = new DateTime(2021, 12, 22, 18, 40, 11, 610, DateTimeKind.Unspecified),
                            LastName = "Doe",
                            MaritalStatusId = 3
                        });
                });

            modelBuilder.Entity("MovieLibrary.Data.Models.User", b =>
                {
                    b.HasOne("MovieLibrary.Data.Models.MaritalStatus", "MaritalStatus")
                        .WithMany("Users")
                        .HasForeignKey("MaritalStatusId")
                        .HasConstraintName("FK_Users_MaritalStatuses")
                        .IsRequired();

                    b.Navigation("MaritalStatus");
                });

            modelBuilder.Entity("MovieLibrary.Data.Models.MaritalStatus", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
